Metadata:
  AWSToolsMetrics:
    IaC_Generator: "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:generatedTemplate/6afea27d-a7ef-4d7f-9935-2d590e0fe6d0"

Parameters:
  ProjectPrefix:
    Type: String
    Description: "Alphanumeric prefix for all resource names"
    Default: "nextwork"

  EnvironmentSuffix:
    Type: String
    Description: "Environment or user suffix for resource names"
    Default: "dev"

  GitHubRepoOwner:
    Type: String
    Description: "GitHub account or organization owning the repo"
    Default: "YOUR_GITHUB_USER"

  GitHubRepoName:
    Type: String
    Description: "GitHub repository name"
    Default: "nextwork-web-project"

  CodeStarConnectionName:
    Type: String
    Description: "Name of the CodeStar connection for GitHub"
    Default: !Sub "${ProjectPrefix}-${EnvironmentSuffix}-connection"

Resources:

  # ---------- CodeArtifact ----------
  CodeArtifactDomain:
    Type: AWS::CodeArtifact::Domain
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      DomainName: !Sub "${ProjectPrefix}-${EnvironmentSuffix}"

  CodeArtifactRepoCentral:
    Type: AWS::CodeArtifact::Repository
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      RepositoryName: "maven-central-store"
      Description: "Maven Central Mirror"
      ExternalConnections: ["public:maven-central"]
      DomainName: !Ref CodeArtifactDomain

  CodeArtifactRepoProject:
    Type: AWS::CodeArtifact::Repository
    DependsOn: [CodeArtifactDomain, CodeArtifactRepoCentral]
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      RepositoryName: !Sub "${ProjectPrefix}-${EnvironmentSuffix}-repo"
      Description: "Project CI/CD artifacts repository"
      Upstreams: [!Ref CodeArtifactRepoCentral]
      DomainName: !Ref CodeArtifactDomain

  # ---------- IAM Roles & Policies ----------
  IAMRoleCodeBuildService:
    Type: AWS::IAM::Role
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      RoleName: !Sub "codebuild-${ProjectPrefix}-${EnvironmentSuffix}-service-role"
      Path: "/service-role/"
      MaxSessionDuration: 3600
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal: {Service: [codebuild.amazonaws.com]}

  IAMPolicyCodeBuildLogs:
    Type: AWS::IAM::ManagedPolicy
    DependsOn: IAMRoleCodeBuildService
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      ManagedPolicyName: !Sub "${ProjectPrefix}-${EnvironmentSuffix}-codebuild-logs-policy"
      Path: "/service-role/"
      Description: "CloudWatch logs access for CodeBuild"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: ["logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents"]
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectPrefix}-${EnvironmentSuffix}"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectPrefix}-${EnvironmentSuffix}:*"
      Roles: [!Ref IAMRoleCodeBuildService]

  IAMPolicyCodeBuildConnection:
    Type: AWS::IAM::ManagedPolicy
    DependsOn: IAMRoleCodeBuildService
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      ManagedPolicyName: !Sub "${ProjectPrefix}-${EnvironmentSuffix}-codebuild-connection-policy"
      Path: "/service-role/"
      Description: "CodeStar connection usage for CodeBuild"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: ["codestar-connections:GetConnectionToken","codestar-connections:GetConnection","codestar-connections:UseConnection"]
            Resource: !GetAtt CodeStarConnection.ConnectionArn
      Roles: [!Ref IAMRoleCodeBuildService]

  IAMPolicyCodeBuildBase:
    Type: AWS::IAM::ManagedPolicy
    DependsOn: IAMRoleCodeBuildService
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      ManagedPolicyName: !Sub "${ProjectPrefix}-${EnvironmentSuffix}-codebuild-base-policy"
      Path: "/service-role/"
      Description: "Basic build permissions for CodeBuild"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: ["logs:*"]
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectPrefix}-${EnvironmentSuffix}"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectPrefix}-${EnvironmentSuffix}:*"
          - Effect: Allow
            Action: ["s3:*"]
            Resource:
              - !Sub "arn:aws:s3:::codepipeline-${AWS::Region}-*"
              - !Sub "arn:aws:s3:::${ProjectPrefix}-${EnvironmentSuffix}"
              - !Sub "arn:aws:s3:::${ProjectPrefix}-${EnvironmentSuffix}/*"
          - Effect: Allow
            Action: ["codebuild:*"]
            Resource: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${ProjectPrefix}-${EnvironmentSuffix}-*"
      Roles: [!Ref IAMRoleCodeBuildService]

  IAMPolicyCodeArtifactConsumer:
    Type: AWS::IAM::ManagedPolicy
    DependsOn: IAMRoleCodeBuildService
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      ManagedPolicyName: !Sub "${ProjectPrefix}-${EnvironmentSuffix}-codeartifact-consumer-policy"
      Path: "/"
      Description: "CodeArtifact consumer policy for EC2 and CodeBuild"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: ["codeartifact:GetAuthorizationToken","codeartifact:GetRepositoryEndpoint","codeartifact:ReadFromRepository"]
            Resource: "*"
          - Effect: Allow
            Action: sts:GetServiceBearerToken
            Condition: {StringEquals: {sts:AWSServiceName: "codeartifact.amazonaws.com"}}
            Resource: "*"
      Roles: [!Ref IAMRoleCodeBuildService, !Ref IAMRoleEC2]

  # ---------- EC2 IAM ----------
  IAMRoleEC2:
    Type: AWS::IAM::Role
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      RoleName: !Sub "ec2-${ProjectPrefix}-${EnvironmentSuffix}-role"
      Path: "/"
      MaxSessionDuration: 3600
      Description: "EC2 role for consuming CodeArtifact"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: [{Effect: Allow, Action: sts:AssumeRole, Principal: {Service: ec2.amazonaws.com}}]

  IAMInstanceProfileEC2:
    Type: AWS::IAM::InstanceProfile
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      InstanceProfileName: !Sub "ec2-${ProjectPrefix}-${EnvironmentSuffix}-profile"
      Roles: [!Ref IAMRoleEC2]

  # ---------- CodeStar Connection ----------
  CodeStarConnection:
    Type: AWS::CodeStarConnections::Connection
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      ConnectionName: !Ref CodeStarConnectionName
      ProviderType: GitHub

  # ---------- CodeBuild Project ----------
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: [IAMRoleCodeBuildService, IAMPolicyCodeBuildLogs, IAMPolicyCodeBuildConnection, IAMPolicyCodeBuildBase]
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      Name: !Sub "${ProjectPrefix}-${EnvironmentSuffix}-build"
      Description: "CodeBuild project for web app"
      Source:
        Type: GITHUB
        Location: !Sub "https://github.com/${GitHubRepoOwner}/${GitHubRepoName}"
        BuildSpec: "buildspec.yml"
      Artifacts:
        Type: S3
        Name: !Sub "${ProjectPrefix}-${EnvironmentSuffix}-artifact.zip"
        Packaging: ZIP
        Location: !Sub "${ProjectPrefix}-${EnvironmentSuffix}"
        Path: "/builds"
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:corretto8"
      ServiceRole: !GetAtt IAMRoleCodeBuildService.Arn
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Sub "/aws/codebuild/${ProjectPrefix}-${EnvironmentSuffix}"
          Status: ENABLED
          StreamName: "build"

  # ---------- CodeDeploy ----------
  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      ApplicationName: !Sub "${ProjectPrefix}-${EnvironmentSuffix}-app"
      ComputePlatform: Server

  IAMRoleCodeDeploy:
    Type: AWS::IAM::Role
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      RoleName: !Sub "codedeploy-${ProjectPrefix}-${EnvironmentSuffix}-role"
      ManagedPolicyArns: ["arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: [{Effect: Allow, Action: sts:AssumeRole, Principal: {Service: codedeploy.amazonaws.com}}]

  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    DependsOn: [IAMRoleCodeDeploy, CodeDeployApplication, CodeBuildProject, IAMPolicyCodeArtifactConsumer]
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      ServiceRoleArn: !GetAtt IAMRoleCodeDeploy.Arn
      DeploymentGroupName: !Sub "${ProjectPrefix}-${EnvironmentSuffix}-dg"
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      Ec2TagFilters: [{Key: role, Type: KEY_AND_VALUE, Value: webserver}]
      AutoScalingGroups: []

  # ---------- S3 Bucket ----------
  S3ArtifactBucket:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Delete
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "${ProjectPrefix}-${EnvironmentSuffix}-bucket"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      OwnershipControls:
        Rules: [{ObjectOwnership: BucketOwnerEnforced}]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault: {SSEAlgorithm: AES256}
